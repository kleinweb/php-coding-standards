<?xml version="1.0"?>

<!--
SPDX-FileCopyrightText: 2023 Temple University <kleinweb@temple.edu>
SPDX-License-Identifier: GPL-3.0-or-later
-->

<ruleset
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/squizlabs/PHP_CodeSniffer/master/phpcs.xsd"
  name="Kleinweb">

  <description>The Kleinweb PHP Coding Standards</description>

  <!-- === Configuration ===================================================================== -->

  <!-- PHP Code Sniffer: keep your nose to yourself! -->
  <arg name="extensions" value="php" />
  <exclude-pattern>*/node_modules/*</exclude-pattern>
  <exclude-pattern>*.js</exclude-pattern>
  <exclude-pattern>*.css</exclude-pattern>

  <!-- Show colors in console -->
  <arg value="-colors" />
  <arg value="sp" />
  <!-- Show sniff codes in all reports -->
  <arg value="ns" />

  <!-- Support for PHP 8.0+ -->
  <config name="testVersion" value="8.0-" />

  <!-- === Patterns ========================================================================== -->

  <!--
    If no files or directories are specified on the command line,
    fallback to checking the directory containing `phpcs.xml`.

    File and directory paths specified in a ruleset are
    relative to the ruleset's location, and that specifying any file or
    directory path on the command line will ignore all file tags.
    -->
  <!-- <file>.</file> -->

  <!-- PHPCS does not respect gitignore, so we must teach it. -->
  <exclude-pattern>*/build/</exclude-pattern>
  <exclude-pattern>*/dist/</exclude-pattern>
  <exclude-pattern>*/vendor/*</exclude-pattern>
  <exclude-pattern>*/web/wp</exclude-pattern>
  <exclude-pattern>*/web/app/themes/twentytwentythree/</exclude-pattern>

  <!-- === Rules ============================================================================= -->

  <rule ref="Doctrine">
    <!-- Opinionated formatting rules are handled by php-cs-fixer. -->
    <exclude name="Generic.Formatting" />
    <exclude name="Squiz.WhiteSpace" />

    <!-- Handled by php-cs-fixer. -->
    <exclude name="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison" />
    <exclude name="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue" />
    <!-- We do want this sniff, but with an exception for empty functions. -->
    <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine" />

    <!-- Handled by php-cs-fixer and PHPStan. -->
    <exclude name="Squiz.Commenting.VariableComment.MissingVar" />

    <!-- Can cause errors when overriding base classes. -->
    <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint" />
    <exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint" />
    <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint" />
  </rule>

  <rule ref="SlevomatCodingStandard.TypeHints.UnionTypeHintFormat">
    <properties>
      <property name="shortNullable" value="yes" />
    </properties>
  </rule>

  <rule ref="Squiz.Commenting">
    <!-- Too much nitpicking, especially with PHPStan type annotation comments. -->
    <exclude name="Squiz.Commenting.InlineComment.InvalidEndChar" />
  </rule>

  <rule ref="Squiz.NamingConventions.ValidVariableName">
    <!-- WordPress has a lot of snake_case variables and properties we need to deal with. -->
    <exclude name="Squiz.NamingConventions.ValidVariableName.MemberNotCamelCaps" />
    <exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore" />
  </rule>

  <rule ref="WordPress">
    <exclude name="Generic.Classes.OpeningBraceSameLine" />
    <exclude name="Generic.Functions.OpeningFunctionBraceKernighanRitchie" />
    <exclude name="Generic.WhiteSpace.ArbitraryParenthesesSpacing" />
    <exclude name="Generic.WhiteSpace.DisallowSpaceIndent" />
    <exclude name="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket" />
    <exclude name="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket" />
    <exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing" />

    <exclude name="Universal.Arrays.DisallowShortArraySyntax.Found" />
    <exclude name="Universal.Namespaces.EnforceCurlyBraceSyntax.Forbidden" />
    <exclude name="Universal.Operators.DisallowShortTernary.Found" />
    <exclude name="Universal.UseStatements.DisallowUseClass.FromSameNamespace" />
    <exclude name="Universal.UseStatements.DisallowUseClass.FoundWithoutAlias" />

    <exclude name="WordPress.Arrays.ArrayDeclarationSpacing" />
    <exclude name="WordPress.Arrays.ArrayIndentation" />
    <exclude name="WordPress.Arrays.ArrayKeySpacingRestrictions" />
    <exclude name="WordPress.WhiteSpace.CastStructureSpacing" />
    <exclude name="WordPress.WhiteSpace.ControlStructureSpacing" />
    <exclude name="WordPress.WhiteSpace.OperatorSpacing" />
    <exclude name="WordPress.NamingConventions.ValidFunctionName" />
    <exclude name="WordPress.NamingConventions.ValidVariableName" />
    <exclude name="WordPress.PHP.YodaConditions.NotYoda" />
    <!-- Prefer Generic.PHP.NoSilencedErrors -->
    <exclude name="WordPress.PHP.NoSilencedErrors" />

    <exclude name="WordPress.Files.FileName.InvalidClassFileName" />
    <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />

    <exclude name="Squiz.Commenting.FileComment.SpacingAfterOpen" />
    <exclude name="Squiz.Operators.IncrementDecrementUsage" />
    <exclude name="VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable" />
  </rule>

  <!-- We are not hosted on WordPress VIP, but their standards reflect best practices. -->
  <!-- FIXME: uninstallable due to apparent php 8.0 incompatibility (at least without lots of pain) -->
  <!-- <rule ref="WordPress-VIP-Go" /> -->

</ruleset>
